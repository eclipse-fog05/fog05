os: linux
language: cpp
services:
  - docker
before_install:
  - docker pull debian:10-slim
  - docker run -it -d --name build debian:10-slim bash
  - docker exec build apt update
  # install deps
  - docker exec build apt install build-essential golang-go devscripts lintian dh-make curl git wget jq libev-dev libssl-dev python3 python3-dev python3-pip m4 pkg-config rsync unzip cmake sudo -y
  - docker exec build pip3 install pyangbind
  # install opam
  - docker exec build wget -O opam https://github.com/ocaml/opam/releases/download/2.0.6/opam-2.0.6-x86_64-linux
  - docker exec build bash -c "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs -o /tmp/rust.sh && chmod +x /tmp/rust.sh"
  - docker exec build bash -c "/tmp/rust.sh --default-toolchain nightly -y"
  - docker exec build install ./opam /usr/local/bin/opam
  - docker exec build opam init --disable-sandboxing
  # copying repo inside container
  - docker cp ../fog05 build:/root/
script:
  - docker exec build bash -c "eval \$(opam env) && source ${HOME}/.cargo/env && cd /root/fog05 && ./build.sh"
    # building a debian package
  # - docker exec build bash -c "mkdir /root/build && cd /root && mv fog05 build/fog05-0.1 && cd build && tar -czvf fog05-0.1.tar.gz fog05-0.1"
  # - docker exec build bash -c "eval \$(opam env) && cd /root/build/fog05-0.1 && make clean && make -C api/api-python clean && make -C sdk/sdk-python clean"
  # - docker exec build bash -c "eval \$(opam env) && export DEBEMAIL=\"info@adlink-labs.tech\" && export DEBFULLNAME=\"ATO Labs\" && cd /root/build/fog05-0.1 && dh_make -f ../fog05-0.1.tar.gz -s -y && debuild --preserve-envvar PATH -us -uc  && ls -l"
  # - docker exec build bash -c "cd /root/build/ && dpkg -I fog05_0.1-1_amd64.deb"