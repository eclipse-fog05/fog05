{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "title": "Generic Definition",
  "description": "atomic entity definition schema",
  "type": "object",
  "properties": {
    "error":{
      "type":"string",
      "description":"string error description"
    },
    "status": {
      "type": "string",
      "desciption": "describe the action, so the desidered lifecycle state"
    },
    "name": {
      "type": "string"
    },
    "uuid": {
      "type": "string"
    },
    "type": {
      "type": "string",
      "description": "describe the type, can be an entity (vm, uk, be, us, ros....) or an entity"
    },
    "version": {
      "type": "integer"
    },
    "entity_data": {
      "type": "object",
      "description": "depends on entity"
    },
    "constraints": {
      "type": "object",
      "properties": {
        "i/o": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "specific i/o name (gpio/....)"
              },
              "number":{
                "type":"integer"
              }
            }
          }
        },
        "networks":{
          "type":"array",
          "items":{
            "type":"object",
            "properties":{
              "type":{
                "type":"string",
                "description":"necessary interface type (wlan, eth, filbus, tsn)"
              },
              "number":{
                "type":"integer"
              }
            }
          }
        },
        "accelerators":{
          "type":"array",
          "items":{
            "type":"object",
            "properties":{
              "type":{
                "type":"string",
                "description":"hw acceleator needed (netfpga, fpga, cuda, opencl...."
              },
              "number":{
                "type":"integer"
              }
            }
          }
        },
        "arch":{
          "type":"string",
          "description":"required cpu architecture"
        },
        "os":{
          "type":"string",
          "description":"required os"
        },
        "position": {
          "type": "object",
          "properties": {
            "lat":{
              "type":"string"
            },
            "lon":{
              "type":"string"
            },
            "radius":{
              "type":"integer",
              "description":"radius to be considered when geofencing"
            }
          }
        }
      }
    },
    "dst": {
      "optional": "true",
      "type": "string",
      "description": "in case of taking_off/landing is the destination node uuid"
    }
  }
}